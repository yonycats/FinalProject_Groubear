<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:websocket="http://www.springframework.org/schema/websocket"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@112.220.114.130:1521:xe"/> 
		<property name="username" value="team4_202404F" />
		<property name="password" value="java" />
	</bean>		
		
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/sqlmap/**/*_SQL.xml" />
		<property name="configLocation" value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	</bean>
	
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.**.mapper" />
	</bean>
	
<!-- 	<bean id="localPath" class="java.lang.String"> -->
<!--       <constructor-arg value="/Users/gihyeokkwon/Documents/DDIT/upload" /> -->
<!--    </bean> -->
	<bean id="localPath" class="java.lang.String">
		<constructor-arg value="C:\GrouBear\upload"/>
	</bean>
	<bean id="cloudPath" class="java.lang.String">
		<constructor-arg value="C:\GrouBear\cloudFile"/>
	</bean>
	
	<!-- 
		MultipartFile CommonsMultipartResolver 설정 시
	 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<!-- 하나의 요청당 파일 업로드 용량 -->
			<property name="maxUploadSize" value="3145728"/>
			<!-- 메모리에 저장되는 최대 용량 -->
			<property name="maxInMemorySize" value="3145728"/>
			<property name="defaultEncoding" value="UTF-8"/>
	</bean>
		
	<!-- 스프링 AOP 활성화 -->
	
	<aop:aspectj-autoproxy/>
	<context:component-scan base-package="kr.or.ddit"></context:component-scan>
<!-- 	<context:component-scan base-package="kr.or.ddit.**.service"></context:component-scan> -->
	
	<!-- 트랜잭션 관리자의 빈 정의 -->
	<bean id = "transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 어노테이션 기반의 트랜잭션 제어를 활성화 합니다. -->
	<tx:annotation-driven/>
</beans>
